Q: When should accessor methods be used?
A: Accessor methods should be used when we want to access the value of a private field of a class from outside the class. 
Accessor methods are also known as getter methods. They are used to retrieve the value of a private field. 
Accessor methods are important because they allow us to control access to the private fields of a class. 
By using accessor methods, we can ensure that the private fields are accessed in a controlled manner, 
which can help to prevent errors and improve the maintainability of the code.

Q: If you create a constructor method to build a DVD by title then create a constructor method to build
a DVD by category. Does JAVA allow you to do this?
A: yes, Java allows to create multiple constructors for a class. This is called constructor overloading. 
When we create multiple constructors, each one must have a unique signature, which means that the parameters must be different in number, type, or order.

Q: After the call of swap(jungleDVD, cinderellaDVD) why does the title of these two
objects still remain?
A: The reason why the title of the two objects still remain after the call of swap(jungleDVD, cinderellaDVD) is 
because the swap method only swaps the references of the two objects, not their actual values. In other words, 
the jungleDVD reference now points to the cinderellaDVD object, and the cinderellaDVD reference now points to the jungleDVD object. 
However, the title field of each object remains unchanged.
Q: After the call of changeTitle(jungleDVD, cinderellaDVD.getTitle()) why is
the title of the JungleDVD changed?
A: The title of the JungleDVD is changed because the changeTitle method takes in a DVD object and a new title as parameters, 
and then sets the title of the DVD object to the new title. In this case, the jungleDVD object is passed as the first parameter, 
and the title of the cinderellaDVD object is passed as the second parameter using the getTitle() method. 
Therefore, the title of the jungleDVD object is changed to the title of the cinderellaDVD object.

